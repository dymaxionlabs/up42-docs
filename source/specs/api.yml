---
swagger: '2.0'
info:
  version: '1.0'
  title: UP42 API Documentation
  contact:
    name: UP42
    url: https://up42.com
host: api.up42.com
basePath: "/"
scheme: https
tags:
- name: Workflows
  description: Endpoints to view created workflows for a project
- name: Jobs
  description: Endpoints to view, create and run jobs for a workflow
- name: Validate Block Manifest
  description: An endpoint to validate UP42Manifest json for your custom blocks 
paths:
  "/projects/{projectId}/workflows":
    get:
      tags:
      - Workflows
      summary: Get all workflows in a project
      operationId: getWorkflowsInProjectUsingGET
      produces:
      - "*/*"
      parameters:
      - name: projectId
        in: path
        description: projectId
        required: true
        type: string
        format: uuid
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/Response«List«WorkflowResponse»»"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/projects/{projectId}/workflows/{workflowId}":
    get:
      tags:
      - Workflows
      summary: Get an individual workflow
      operationId: getWorkflowUsingGET
      produces:
      - "*/*"
      parameters:
      - name: projectId
        in: path
        description: projectId
        required: true
        type: string
        format: uuid
      - name: workflowId
        in: path
        description: workflowId
        required: true
        type: string
        format: uuid
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/Response«WorkflowResponse»"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/projects/{projectId}/jobs":
    get:
      tags:
      - Jobs
      summary: Get all existing jobs for a project
      operationId: getAllJobsForProjectUsingGET
      produces:
      - "*/*"
      parameters:
      - name: projectId
        in: path
        description: projectId
        required: true
        type: string
        format: uuid
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/Response«List«Job»»"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/projects/{projectId}/workflows/{workflowId}/jobs":
    post:
      tags:
      - Jobs
      summary: Create a job to start running an instance of a workflow
      operationId: createAndRunJobUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - in: body
        name: jsonNode
        description: JsonNode containing the name of each workflow task in the workflow with a valid configuration for
          each task. These can be query details as well as processing parameters, depending on if it is a data block or a processing block.
        required: true
        schema:
          "$ref": "#/definitions/JsonNode"
      - name: projectId
        in: path
        description: projectId
        required: true
        type: string
        format: uuid
      - name: workflowId
        in: path
        description: workflowId
        required: true
        type: string
        format: uuid
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/Response«Job»"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/projects/{projectId}/jobs/{jobId}":
    get:
      tags:
      - Jobs
      summary: Get an individual job
      operationId: getJobUsingGET
      produces:
      - "*/*"
      parameters:
      - name: jobId
        in: path
        description: jobId
        required: true
        type: string
        format: uuid
      - name: projectId
        in: path
        description: projectId
        required: true
        type: string
        format: uuid
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/Response«Job»"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/projects/{projectId}/jobs/{jobId}/outputs/data-json":
    get:
      tags:
      - Jobs
      summary: Get the data.json file that is output from a successfully completed job
      operationId: getJobDataJsonUsingGET
      produces:
      - text/plain;charset=UTF-8
      parameters:
      - name: jobId
        in: path
        description: jobId
        required: true
        type: string
        format: uuid
      - name: projectId
        in: path
        description: projectId
        required: true
        type: string
        format: uuid
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/InputStreamResource"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/projects/{projectId}/jobs/{jobId}/outputs/directory":
    get:
      tags:
      - Jobs
      summary: Get the compressed output directory of a completed job
      operationId: getOutputDirUsingGET
      produces:
      - application/tar+gzip
      parameters:
      - name: jobId
        in: path
        description: jobId
        required: true
        type: string
        format: uuid
      - name: projectId
        in: path
        description: projectId
        required: true
        type: string
        format: uuid
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/InputStreamResource"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/projects/{projectId}/jobs/{id}/cancel":
    post:
      tags:
      - Jobs
      summary: Cancel a running job
      operationId: cancelJobUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: string
        format: uuid
      - name: projectId
        in: path
        description: projectId
        required: true
        type: string
        format: uuid
      responses:
        '201':
          description: Created
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/validate-schema/block":
    post:
      tags:
      - Validate Block Manifest
      summary: Validate block schema
      operationId: validateBlockManifestUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - in: body
        name: jsonNode
        description: JsonNode containing the block manifest to validate
        required: true
        schema:
          "$ref": "#/definitions/JsonNode"
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/ResponseEntity"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
definitions:
  Token:
    type: object
    properties:
      access_token:
        type: string
        description: The access token string as issued by the authorization server
      token_type:
        type: string
        enum:
        - Bearer
        description: The type of token this is, typically just the string “Bearer”
      expires_in:
        type: integer
        format: int32
        description: The lifetime in seconds of the access token
  Block:
    type: object
    properties:
      createdAt:
        type: string
        format: date-time
      displayName:
        type: string
      id:
        type: string
        format: uuid
      isPublic:
        type: boolean
      latestPublicVersion:
        "$ref": "#/definitions/BlockVersion"
      latestVersion:
        "$ref": "#/definitions/BlockVersion"
      name:
        type: string
      provider:
        type: string
      publicVersions:
        type: array
        items:
          "$ref": "#/definitions/BlockVersion"
      tags:
        type: array
        items:
          type: string
      type:
        type: string
        enum:
        - PROCESSING
        - DATA
      updatedAt:
        type: string
        format: date-time
      versions:
        type: array
        items:
          "$ref": "#/definitions/BlockVersion"
    title: Block
  BlockMarketplaceMetadata:
    type: object
    properties:
      blockMarketplaceSampleData:
        type: array
        items:
          "$ref": "#/definitions/BlockMarketplaceSampleData"
      createdAt:
        type: string
        format: date-time
      iconUrl:
        type: string
      id:
        type: string
        format: uuid
      overview:
        type: string
      pricingStrategy:
        "$ref": "#/definitions/PricingStrategy"
      termsAndConditionsUrl:
        type: string
      updatedAt:
        type: string
        format: date-time
    title: BlockMarketplaceMetadata
  BlockMarketplaceSampleData:
    type: object
    properties:
      createdAt:
        type: string
        format: date-time
      id:
        type: string
        format: uuid
      type:
        type: string
        enum:
        - IMAGE
        - JSON
        - TEXT
      updatedAt:
        type: string
        format: date-time
      value:
        type: string
    title: BlockMarketplaceSampleData
  BlockResponse:
    type: object
    properties:
      availableVersions:
        type: array
        items:
          type: string
      containerUrl:
        type: string
      createdAt:
        type: string
        format: date-time
      description:
        type: string
      displayName:
        type: string
      id:
        type: string
        format: uuid
      inputCapabilities:
        type: array
        items:
          "$ref": "#/definitions/Capability"
      isDryRunSupported:
        type: boolean
      isPublic:
        type: boolean
      isRunnableByUser:
        type: boolean
      isValid:
        type: boolean
      machineName:
        type: string
        enum:
        - SMALL
        - MEDIUM
        - LARGE
        - XLARGE
      metadata:
        "$ref": "#/definitions/BlockMarketplaceMetadata"
      name:
        type: string
      outputCapabilities:
        type: array
        items:
          "$ref": "#/definitions/Capability"
      parameters:
        "$ref": "#/definitions/JsonNode"
      provider:
        type: string
      tags:
        type: array
        items:
          type: string
      type:
        type: string
        enum:
        - PROCESSING
        - DATA
      updatedAt:
        type: string
        format: date-time
      version:
        type: string
    title: BlockResponse
  BlockVersion:
    type: object
    properties:
      blockMarketplaceMetadata:
        "$ref": "#/definitions/BlockMarketplaceMetadata"
      containerUrl:
        type: string
      createdAt:
        type: string
        format: date-time
      id:
        type: string
        format: uuid
      inputCapabilities:
        type: array
        items:
          "$ref": "#/definitions/Capability"
      isDryRunSupported:
        type: boolean
      isPublic:
        type: boolean
      isValid:
        type: boolean
      machineName:
        type: string
        enum:
        - SMALL
        - MEDIUM
        - LARGE
        - XLARGE
      manifestDescription:
        type: string
      outputCapabilities:
        type: array
        items:
          "$ref": "#/definitions/Capability"
      parameters:
        "$ref": "#/definitions/JsonNode"
      updatedAt:
        type: string
        format: date-time
      versionTag:
        type: string
    title: BlockVersion
  Capability:
    type: object
    properties:
      name:
        type: string
    title: Capability
  ErrorResponse«Job»:
    type: object
    properties:
      code:
        type: string
        enum:
        - UNKNOWN_ERROR
        - VALIDATION_ERROR
        - RESOURCE_NOT_FOUND
        - CLIENT_ERROR
        - CONFLICT
        - INVALID_REQUEST
        - TOO_MANY_REQUESTS
      details:
        "$ref": "#/definitions/Job"
      message:
        type: string
    title: ErrorResponse«Job»
  ErrorResponse«List«Job»»:
    type: object
    properties:
      code:
        type: string
        enum:
        - UNKNOWN_ERROR
        - VALIDATION_ERROR
        - RESOURCE_NOT_FOUND
        - CLIENT_ERROR
        - CONFLICT
        - INVALID_REQUEST
        - TOO_MANY_REQUESTS
      details:
        type: array
        items:
          "$ref": "#/definitions/Job"
      message:
        type: string
    title: ErrorResponse«List«Job»»
  ErrorResponse«List«WorkflowResponse»»:
    type: object
    properties:
      code:
        type: string
        enum:
        - UNKNOWN_ERROR
        - VALIDATION_ERROR
        - RESOURCE_NOT_FOUND
        - CLIENT_ERROR
        - CONFLICT
        - INVALID_REQUEST
        - TOO_MANY_REQUESTS
      details:
        type: array
        items:
          "$ref": "#/definitions/WorkflowResponse"
      message:
        type: string
    title: ErrorResponse«List«WorkflowResponse»»
  ErrorResponse«Project»:
    type: object
    properties:
      code:
        type: string
        enum:
        - UNKNOWN_ERROR
        - VALIDATION_ERROR
        - RESOURCE_NOT_FOUND
        - CLIENT_ERROR
        - CONFLICT
        - INVALID_REQUEST
        - TOO_MANY_REQUESTS
      details:
        "$ref": "#/definitions/Project"
      message:
        type: string
    title: ErrorResponse«Project»
  ErrorResponse«WorkflowResponse»:
    type: object
    properties:
      code:
        type: string
        enum:
        - UNKNOWN_ERROR
        - VALIDATION_ERROR
        - RESOURCE_NOT_FOUND
        - CLIENT_ERROR
        - CONFLICT
        - INVALID_REQUEST
        - TOO_MANY_REQUESTS
      details:
        "$ref": "#/definitions/WorkflowResponse"
      message:
        type: string
    title: ErrorResponse«WorkflowResponse»
  File:
    type: object
    properties:
      absolute:
        type: boolean
      absoluteFile:
        "$ref": "#/definitions/File"
      absolutePath:
        type: string
      canonicalFile:
        "$ref": "#/definitions/File"
      canonicalPath:
        type: string
      directory:
        type: boolean
      file:
        type: boolean
      freeSpace:
        type: integer
        format: int64
      hidden:
        type: boolean
      name:
        type: string
      parent:
        type: string
      parentFile:
        "$ref": "#/definitions/File"
      path:
        type: string
      totalSpace:
        type: integer
        format: int64
      usableSpace:
        type: integer
        format: int64
    title: File
  InputStream:
    type: object
    title: InputStream
  InputStreamResource:
    type: object
    properties:
      description:
        type: string
      file:
        "$ref": "#/definitions/File"
      filename:
        type: string
      inputStream:
        "$ref": "#/definitions/InputStream"
      open:
        type: boolean
      readable:
        type: boolean
      uri:
        "$ref": "#/definitions/URI"
      url:
        "$ref": "#/definitions/URL"
    title: InputStreamResource
  Job:
    type: object
    properties:
      createdAt:
        type: string
        format: date-time
      finishedAt:
        type: string
        format: date-time
      id:
        type: string
        format: uuid
      inputs:
        "$ref": "#/definitions/JsonNode"
      mode:
        type: string
        enum:
        - dry-run
        - default
      startedAt:
        type: string
        format: date-time
      status:
        type: string
        enum:
        - NOT_STARTED
        - PENDING
        - RUNNING
        - SUCCEEDED
        - FAILED
        - CANCELLED
        - CANCELLING
      tasks:
        type: array
        items:
          "$ref": "#/definitions/JobTask"
      updatedAt:
        type: string
        format: date-time
      workflow:
        "$ref": "#/definitions/Workflow"
    title: Job
  JobTask:
    type: object
    properties:
      block:
        "$ref": "#/definitions/Block"
      blockVersion:
        "$ref": "#/definitions/BlockVersion"
      createdAt:
        type: string
        format: date-time
      finishedAt:
        type: string
        format: date-time
      id:
        type: string
        format: uuid
      inputs:
        "$ref": "#/definitions/JsonNode"
      name:
        type: string
      parents:
        type: array
        items:
          "$ref": "#/definitions/JobTask"
      startedAt:
        type: string
        format: date-time
      status:
        type: string
        enum:
        - NOT_STARTED
        - PENDING
        - RUNNING
        - SUCCEEDED
        - FAILED
        - CANCELLED
        - CANCELLING
      updatedAt:
        type: string
        format: date-time
    title: JobTask
  JsonNode:
    type: object
    properties:
      array:
        type: boolean
      bigDecimal:
        type: boolean
      bigInteger:
        type: boolean
      binary:
        type: boolean
      boolean:
        type: boolean
      containerNode:
        type: boolean
      double:
        type: boolean
      float:
        type: boolean
      floatingPointNumber:
        type: boolean
      int:
        type: boolean
      integralNumber:
        type: boolean
      long:
        type: boolean
      missingNode:
        type: boolean
      nodeType:
        type: string
        enum:
        - ARRAY
        - BINARY
        - BOOLEAN
        - MISSING
        - 'NULL'
        - NUMBER
        - OBJECT
        - POJO
        - STRING
      'null':
        type: boolean
      number:
        type: boolean
      object:
        type: boolean
      pojo:
        type: boolean
      short:
        type: boolean
      textual:
        type: boolean
      valueNode:
        type: boolean
    title: JsonNode
  PricingStrategy:
    type: object
    properties:
      createdAt:
        type: string
        format: date-time
      credits:
        type: integer
        format: int32
      id:
        type: string
        format: uuid
      type:
        type: string
        enum:
        - SQUARE_KM_INPUT
        - SQUARE_KM_OUTPUT
        - MEGABYTE_INPUT
        - MEGABYTE_OUTPUT
        - SCENE_INPUT
        - SCENE_OUTPUT
        - MEGAPIXEL_INPUT
        - MEGAPIXEL_OUTPUT
      updatedAt:
        type: string
        format: date-time
    title: PricingStrategy
  Project:
    type: object
    properties:
      createdAt:
        type: string
        format: date-time
      description:
        type: string
      id:
        type: string
        format: uuid
      name:
        type: string
      updatedAt:
        type: string
        format: date-time
    title: Project
  ResponseEntity:
    type: object
    properties:
      body:
        type: object
      statusCode:
        type: string
        enum:
        - 100 CONTINUE
        - 101 SWITCHING_PROTOCOLS
        - 102 PROCESSING
        - 103 CHECKPOINT
        - 200 OK
        - 201 CREATED
        - 202 ACCEPTED
        - 203 NON_AUTHORITATIVE_INFORMATION
        - 204 NO_CONTENT
        - 205 RESET_CONTENT
        - 206 PARTIAL_CONTENT
        - 207 MULTI_STATUS
        - 208 ALREADY_REPORTED
        - 226 IM_USED
        - 300 MULTIPLE_CHOICES
        - 301 MOVED_PERMANENTLY
        - 302 FOUND
        - 302 MOVED_TEMPORARILY
        - 303 SEE_OTHER
        - 304 NOT_MODIFIED
        - 305 USE_PROXY
        - 307 TEMPORARY_REDIRECT
        - 308 PERMANENT_REDIRECT
        - 400 BAD_REQUEST
        - 401 UNAUTHORIZED
        - 402 PAYMENT_REQUIRED
        - 403 FORBIDDEN
        - 404 NOT_FOUND
        - 405 METHOD_NOT_ALLOWED
        - 406 NOT_ACCEPTABLE
        - 407 PROXY_AUTHENTICATION_REQUIRED
        - 408 REQUEST_TIMEOUT
        - 409 CONFLICT
        - 410 GONE
        - 411 LENGTH_REQUIRED
        - 412 PRECONDITION_FAILED
        - 413 PAYLOAD_TOO_LARGE
        - 413 REQUEST_ENTITY_TOO_LARGE
        - 414 URI_TOO_LONG
        - 414 REQUEST_URI_TOO_LONG
        - 415 UNSUPPORTED_MEDIA_TYPE
        - 416 REQUESTED_RANGE_NOT_SATISFIABLE
        - 417 EXPECTATION_FAILED
        - 418 I_AM_A_TEAPOT
        - 419 INSUFFICIENT_SPACE_ON_RESOURCE
        - 420 METHOD_FAILURE
        - 421 DESTINATION_LOCKED
        - 422 UNPROCESSABLE_ENTITY
        - 423 LOCKED
        - 424 FAILED_DEPENDENCY
        - 426 UPGRADE_REQUIRED
        - 428 PRECONDITION_REQUIRED
        - 429 TOO_MANY_REQUESTS
        - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
        - 451 UNAVAILABLE_FOR_LEGAL_REASONS
        - 500 INTERNAL_SERVER_ERROR
        - 501 NOT_IMPLEMENTED
        - 502 BAD_GATEWAY
        - 503 SERVICE_UNAVAILABLE
        - 504 GATEWAY_TIMEOUT
        - 505 HTTP_VERSION_NOT_SUPPORTED
        - 506 VARIANT_ALSO_NEGOTIATES
        - 507 INSUFFICIENT_STORAGE
        - 508 LOOP_DETECTED
        - 509 BANDWIDTH_LIMIT_EXCEEDED
        - 510 NOT_EXTENDED
        - 511 NETWORK_AUTHENTICATION_REQUIRED
      statusCodeValue:
        type: integer
        format: int32
    title: ResponseEntity
  Response«Job»:
    type: object
    properties:
      data:
        "$ref": "#/definitions/Job"
      error:
        "$ref": "#/definitions/ErrorResponse«Job»"
    title: Response«Job»
  Response«List«Job»»:
    type: object
    properties:
      data:
        type: array
        items:
          "$ref": "#/definitions/Job"
      error:
        "$ref": "#/definitions/ErrorResponse«List«Job»»"
    title: Response«List«Job»»
  Response«List«WorkflowResponse»»:
    type: object
    properties:
      data:
        type: array
        items:
          "$ref": "#/definitions/WorkflowResponse"
      error:
        "$ref": "#/definitions/ErrorResponse«List«WorkflowResponse»»"
    title: Response«List«WorkflowResponse»»
  Response«Project»:
    type: object
    properties:
      data:
        "$ref": "#/definitions/Project"
      error:
        "$ref": "#/definitions/ErrorResponse«Project»"
    title: Response«Project»
  Response«WorkflowResponse»:
    type: object
    properties:
      data:
        "$ref": "#/definitions/WorkflowResponse"
      error:
        "$ref": "#/definitions/ErrorResponse«WorkflowResponse»"
    title: Response«WorkflowResponse»
  URI:
    type: object
    properties:
      absolute:
        type: boolean
      authority:
        type: string
      fragment:
        type: string
      host:
        type: string
      opaque:
        type: boolean
      path:
        type: string
      port:
        type: integer
        format: int32
      query:
        type: string
      rawAuthority:
        type: string
      rawFragment:
        type: string
      rawPath:
        type: string
      rawQuery:
        type: string
      rawSchemeSpecificPart:
        type: string
      rawUserInfo:
        type: string
      scheme:
        type: string
      schemeSpecificPart:
        type: string
      userInfo:
        type: string
    title: URI
  URL:
    type: object
    properties:
      authority:
        type: string
      content:
        type: object
      defaultPort:
        type: integer
        format: int32
      file:
        type: string
      host:
        type: string
      path:
        type: string
      port:
        type: integer
        format: int32
      protocol:
        type: string
      query:
        type: string
      ref:
        type: string
      userInfo:
        type: string
    title: URL
  Workflow:
    type: object
    properties:
      createdAt:
        type: string
        format: date-time
      description:
        type: string
      id:
        type: string
        format: uuid
      name:
        type: string
      tasks:
        type: array
        items:
          "$ref": "#/definitions/WorkflowTask"
      updatedAt:
        type: string
        format: date-time
    title: Workflow
  WorkflowResponse:
    type: object
    properties:
      createdAt:
        type: string
        format: date-time
      description:
        type: string
      id:
        type: string
        format: uuid
      name:
        type: string
      tasks:
        type: array
        items:
          "$ref": "#/definitions/WorkflowTaskResponse"
      totalProcessingTime:
        type: integer
        format: int64
      updatedAt:
        type: string
        format: date-time
    title: WorkflowResponse
  WorkflowTask:
    type: object
    properties:
      block:
        "$ref": "#/definitions/Block"
      blockVersion:
        "$ref": "#/definitions/BlockVersion"
      createdAt:
        type: string
        format: date-time
      id:
        type: string
        format: uuid
      name:
        type: string
      parents:
        type: array
        items:
          "$ref": "#/definitions/WorkflowTask"
      updatedAt:
        type: string
        format: date-time
    title: WorkflowTask
  WorkflowTaskResponse:
    type: object
    properties:
      block:
        "$ref": "#/definitions/BlockResponse"
      blockName:
        type: string
      blockVersionTag:
        type: string
      name:
        type: string
      parents:
        type: array
        items:
          "$ref": "#/definitions/WorkflowTask"
    title: WorkflowTaskResponse
